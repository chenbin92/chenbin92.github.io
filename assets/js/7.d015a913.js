(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{147:function(n,t,a){"use strict";a.r(t);var s=a(0),e=Object(s.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"框架设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架设计"}},[n._v("#")]),n._v(" 框架设计")]),n._v(" "),a("p",[n._v("整体框架设计如下，包含目录结构、API 等部分")]),n._v(" "),a("h2",{attrs:{id:"目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[n._v("#")]),n._v(" 目录结构")]),n._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[n._v(".\n├── packages\n│   ├── build-plugin-nice-app/       # 基本对等 build-plugin-ice-app 的 webpack 配置（但不包含运行时的能力）\n│   ├── build-plugin-nice-router/    # 对等 build-plugin-router 支持约定式路由以及页面的配置\n│   ├── build-plugin-nice-config/    # 将 config 挂载到运行时环境\n│   ├── build-plugin-nice-utils/     # 将 uitl 挂载到运行时环境\n│   ├── build-plugin-nice-logger/    # 将 logger 挂载到运行时环境\n│   ├── build-plugin-nice-store/     # 将 PageProvider 动态注入\n│   ├── build-plugin-nice-renderer/  # 支持 SPA、SSR、MPA、Micro 的输出\n│   │     ├── spa.ts\n│   │     ├── ssr.ts\n│   │     ├── mpa.ts\n│   │     ├── micro.ts\n│   │     └── index.ts\n│   ├── router                  # 考虑将现有 @ice/router 维护在这里？\n│   ├── generator               # 生成器（根据 build.json 和 appConfig 实时生成 .nice）\n│   ├── nice-app/\n│   │   ├── components/         # 内置组件（合并路由组件）\n│   │   │    ├── ErrorPage\n│   │   │    ├── ErrorBoundary\n│   │   |    └── index.ts\n│   │   ├── config/             # 内置配置（简单示例）\n│   │   ├── utils/              # 内置工具（简单示例）\n│   │   ├── layouts/            # 内置布局（简单示例）\n│   │   ├── pages/              # 内置页面（简单示例）\n│   │   ├── hooks/              # 内置 hooks（合并路由 hooks）\n│   │   │    ├── useApp.ts\n│   │   │    ├── usePage.ts\n│   │   │    ├── useRequest.ts\n│   │   |    └── index.ts\n│   |   └── package.json\n│   |   └── build.json\n│   |   └── index.ts\n│   |   └── createApp.ts      # 对用户不可见\n│   │\n│   ├── request-module        # 请求实现\n│   ├── logger-module         # 日志模块\n│   ├── i18n-module           # 多语言模块\n│   └── auth-module           # 权限模块\n│\n├── README.md\n└── package.json\n")])])]),a("h2",{attrs:{id:"框架脑图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架脑图"}},[n._v("#")]),n._v(" 框架脑图")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1yNFCtpT7gK0jSZFpXXaTkpXa-1018-900.png",alt:""}})]),n._v(" "),a("h2",{attrs:{id:"应用脑图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用脑图"}},[n._v("#")]),n._v(" 应用脑图")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1eVxotpT7gK0jSZFpXXaTkpXa-2392-1280.png",alt:""}})]),n._v(" "),a("h2",{attrs:{id:"插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[n._v("#")]),n._v(" 插件")]),n._v(" "),a("p",[n._v("定制 "),a("strong",[n._v("编译时")]),n._v(" 的能力（主要以 webpack 为主）")]),n._v(" "),a("h2",{attrs:{id:"模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[n._v("#")]),n._v(" 模块")]),n._v(" "),a("p",[n._v("定制 "),a("strong",[n._v("运行时")]),n._v(" 的能力（主要以 runtime 为主）")])])}),[],!1,null,null,null);t.default=e.exports}}]);